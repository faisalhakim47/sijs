class NodeType{static filter(){}static map(){}}const nodetypeList=[];function getNodeTypes(){return nodetypeList}function addNodeType(a){nodetypeList.push(a)}class List{constructor(){this.keys=[],this.values=[]}set(a,b){this.keys.push(a),this.values.push(b)}get(a){return this.values[this.keys.indexOf(a)]}remove(a){const b=this.keys.indexOf(a);this.keys.splice(b,1),this.values.splice(b,1)}}class Expression{filter(){}constructor(a){this.nodeIndex=a}}const expressionList=new List;function getExpressionsFor(a){return expressionList.get(a)}function addExpressionFor(a,b){const c=getExpressionsFor(a);Array.isArray(c)?c.push(b):expressionList.set(a,[b])}class Updater{static filter(){}static map(){}update(){}}const updaterList=new List;function getUpdatersFor(a){return updaterList.get(a)}function addUpdaterFor(a,b){const c=getUpdatersFor(a);Array.isArray(c)?c.push(b):updaterList.set(a,[b])}const MARKER='__sijs_marker__',PLACEHOLDER='__sijs_placeholder__',INSTANCE='__sijs_instance__';function walkDomTree(a,b,{whatToShow:c,acceptNode:d}={}){const e=document.createTreeWalker(a,c||NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT,{acceptNode:d||(()=>NodeFilter.FILTER_ACCEPT)},!1);let f=-1,g=!0;for(const h=()=>g=!1;e.nextNode()&&g;)f++,b(e.currentNode,f,h)}const templateCache=new List;function requestTemplate(a){const b=templateCache.get(a);if(b instanceof Template)return b;const c=new Template(a);return templateCache.set(a,c),c}class Template{constructor(a){const b=[],c=document.createElement('template');c.innerHTML=a.join(MARKER);const d=[];walkDomTree(c.content,(a)=>{if(-1===a.nodeValue.indexOf(MARKER))return;const b=document.createDocumentFragment(),c=a.nodeValue.split(MARKER).join(MARKER+PLACEHOLDER+MARKER).split(MARKER).map((a)=>document.createTextNode(a)).forEach((a)=>{b.appendChild(a)});d.push(()=>{a.parentNode.replaceChild(b,a)})},{whatToShow:NodeFilter.SHOW_TEXT,acceptNode(a){if(-1!==a.nodeValue.indexOf(MARKER))return NodeFilter.FILTER_ACCEPT}}),d.forEach((a)=>a()),walkDomTree(c.content,(a,c)=>{const d=getNodeTypes().find((b)=>b.filter(a));d&&d.prototype instanceof NodeType&&d.map(a,c,(...a)=>{const e=getExpressionsFor(d).find((b)=>b.filter(...a));e&&e.prototype instanceof Expression&&b.push(new e(c,...a))})}),this.templateElm=c,this.templateParts=b}create(){const a=[],b=document.importNode(this.templateElm.content,!0);let c=0,d=this.templateParts[c];return walkDomTree(b,(b,e,f)=>{if(!d)return f();if(d.nodeIndex===e){const e=getUpdatersFor(d.constructor).find((a)=>a.filter(d));e&&e.prototype instanceof Updater&&(a.push(new e(b,d)),d=this.templateParts[++c])}}),[].forEach((a)=>a()),new TemplateInstance(this,b.children.item(0),a)}}class TemplateInstance{constructor(a,b,c){this.template=a,this.element=b,this.partUpdaters=c}update(a){let b=0;this.partUpdaters.forEach((c)=>{c.update(a.slice(b,b+=c.numberOfPart))})}}class LitTag{constructor(a,b){this.staticParts=a,this.dymanicParts=b}verify(a){return templateCache.get(this.staticParts)===a.template}compile(){const a=requestTemplate(this.staticParts).create();return a.element[INSTANCE]=a,a.update(this.dymanicParts),a}render(a){if(a[INSTANCE]instanceof TemplateInstance&&this.verify(a[INSTANCE])){const b=a[INSTANCE];b.update(this.dymanicParts)}else{const b=this.compile();a.parentNode.replaceChild(b.element,a)}}}function html(a,...b){return new LitTag(a,b)}class ElementNodeType extends NodeType{static filter(a){return a.nodeType===Node.ELEMENT_NODE&&a.hasAttributes()}static map(a,b,c){for(const d of a.attributes)c(d)}}class TextNodeType extends NodeType{static filter(a){return a.nodeType===Node.TEXT_NODE&&a.nodeValue===PLACEHOLDER}static map(a,b,c){c()}}class AttributeExpression extends Expression{static filter(a){return-1!==a.value.indexOf(MARKER)}constructor(a,b){super(a),this.attributeName=b.name,this.staticParts=b.value.split(MARKER)}}class ContentExpression extends Expression{static filter(){return!0}constructor(a){super(a)}}class ElementExpression extends Expression{static filter(a){return a.name===MARKER}constructor(a){super(a)}}class AttributeUpdater extends Updater{static filter(){return!0}constructor(a,b){super(),this.node=a,this.attributeName=b.attributeName,this.staticParts=b.staticParts,this.oldValues=[],this.numberOfPart=staticParts.length-1}update(a){if(-1===a.findIndex((a,b)=>a!==this.oldValues[b]))return;let b=0;const c=this.numberOfPart,d=this.staticParts.map((d,e)=>e===c?d:d+a[b++]).join('');this.node.setAttribute(this.attributeName,d),this.oldValues=a}}function repeat(a,b){return new Repeat(a,b)}class Repeat{constructor(a,b){this.items=a,this.mapFn=b}update(a,b,c){const d=c.parentNode;this.items.map(this.mapFn).forEach((b)=>{const e=a.shift();if(e)b.render(e);else{const a=b.compile();d.insertBefore(a.element,c)}}),a.forEach((a)=>{d.removeChild(a)})}}class ContentUpdater extends Updater{static filter(){return!0}constructor(a){super(),null==a.previousSibling&&a.parentNode.insertBefore(document.createTextNode(''),a),this.prevNode=a.previousSibling,this.nextNode=a.nextSibling,this.numberOfPart=1}get oldElements(){let a=this.prevNode.nextSibling;const b=[];for(;a!==this.nextNode;)b.push(a),a=a.nextSibling;return b}update(a){const b=this.oldElements[0],c=a[0];c instanceof LitTag?c.render(b):c instanceof Repeat?c.update(this.oldElements,this.prevNode,this.nextNode):''+a!==this.oldElements[0].nodeValue&&(b.nodeValue=a)}}class ElementUpdater extends Updater{static filter(){return!0}constructor(a){super(),this.node=a,this.prevNode=a.previousSibling,this.nextNode=a.nextSibling,this.options={},this.numberOfPart=1}update(a){for(const b in a){const c=a[b];if('if'==b){if(c===this.options.if)continue;else c?c&&(this.nextNode.parentNode.insertBefore(this.node,this.nextNode),this.nextNode[IFELSE]=!0):(this.nextNode.parentNode.removeChild(this.node),this.nextNode[IFELSE]=!1);this.options.if=c}else if('elseIf'==b){const a=this.prevNode[IFELSE];if(c===this.options.elseIf&&a===this.options.prevIf)continue;!c||a?(this.nextNode.parentNode.removeChild(this.node),this.nextNode[IFELSE]=a):c&&(this.nextNode.parentNode.insertBefore(this.node,this.nextNode),this.nextNode[IFELSE]=!0),this.options.prevIf=a,this.options.elseIf=c}}}}class EventUpdater extends Updater{static filter(a){return'on'===a.attributeName.slice(0,2)}constructor(a,b){super(),this.node=a,this.eventName=b.attributeName.slice(2),this.oldListener=null,this.numberOfPart=1,this.node.removeAttribute(b.attributeName)}update(a){a=a[0];a===this.oldListener||(this.oldListener&&this.node.removeEventListener(this.eventName,this.oldListener),a&&this.node.addEventListener(this.eventName,a),this.oldListener=a)}}addNodeType(ElementNodeType),addNodeType(TextNodeType),addExpressionFor(ElementNodeType,AttributeExpression),addExpressionFor(ElementNodeType,ElementExpression),addExpressionFor(TextNodeType,ContentExpression),addUpdaterFor(AttributeExpression,EventUpdater),addUpdaterFor(AttributeExpression,AttributeUpdater),addUpdaterFor(ContentExpression,ContentUpdater),addUpdaterFor(ElementExpression,ElementUpdater);export{html,repeat};